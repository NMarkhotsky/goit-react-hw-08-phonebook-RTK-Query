{"version":3,"file":"static/js/409.f715e356.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/Utils/Validate.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/Filter.styled.jsx","components/ContactFilter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/GlobalStyle/Container.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 12px;\n`;\n\nexport const FieldInput = styled.input`\n  padding: 5px;\n  margin-top: 5px;\n\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  background-color: #21c53c;\n  padding: 8px;\n  font-size: 12px;\n  border: none;\n  border-radius: 5px;\n  color: #ffffff;\n\n  :hover {\n    background-color: #0c9422;\n  }\n  :active {\n    background-color: #056e17;\n  }\n`;\n","import * as Yup from 'yup';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(20).required(''),\n  number: Yup.string().required(''),\n});\n\nconst phoneNumberMask = [\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nexport { ContactSchema, phoneNumberMask };\n","import { Formik, Field, ErrorMessage } from 'formik';\nimport { Form, Label, Button } from './ContactForm.styled';\nimport { ContactSchema, phoneNumberMask } from 'components/Utils/Validate';\nimport MaskedInput from 'react-text-mask';\nimport toast from 'react-hot-toast';\nimport {\n  useAddContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\n\nexport const ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [addContacts] = useAddContactsMutation();\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, action) => {\n        const duplicateName = data.find(\n          ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n        );\n        return duplicateName\n          ? toast(`${values.name} is already in contacts.`, { icon: '⚠️' })\n          : (addContacts(values),\n            toast.success(`${values.name} added to contacts.`),\n            action.resetForm());\n      }}\n    >\n      <Form>\n        <Label>\n          Name*\n          <Field\n            type=\"text\"\n            name=\"name\"\n            as=\"input\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n        </Label>\n        <ErrorMessage name=\"name\" component={'span'} />\n        <Label>\n          Number*\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            as=\"input\"\n            component={({ field }) => (\n              <MaskedInput\n                {...field}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"The phone number must contain 7 digits\"\n                mask={phoneNumberMask}\n              />\n            )}\n          />\n        </Label>\n        <ErrorMessage name=\"number\" component={'span'} />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const P = styled.p`\n  margin-bottom: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filteredContact, selectFilters } from 'redux/contacts/filtersSlice';\nimport { Label, P } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n\n  const changeFilter = ({ target: { value } }) => {\n    dispatch(filteredContact(value));\n  };\n\n  return (\n    <Label>\n      <P>Find contacts by name</P>\n      <input type=\"text\" value={filter} onChange={changeFilter} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  background-color: #b70a0a;\n\n  font-size: 12px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  color: #ffffff;\n\n  :hover {\n    background-color: #8e0000;\n  }\n  :active {\n    background-color: #690000;\n  }\n  :disabled {\n    background-color: #888888;\n  }\n`;\n","import { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport { Button, Item, Thumb } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\n\nexport const ListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <Item>\n      <Thumb>\n        <p>{name}: </p>\n      </Thumb>\n      <Thumb>\n        <p>{number}</p>\n        <Button\n          type=\"button\"\n          disabled={isLoading}\n          onClick={() => {\n            deleteContact(id);\n            toast.success(`${name} is deleted`);\n          }}\n        >\n          Delete\n        </Button>\n      </Thumb>\n    </Item>\n  );\n};\n\nListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n","import { ListItem } from '../ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilters } from 'redux/contacts/filtersSlice';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { ContactsLoader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const { data = [], isLoading, isError } = useGetContactsQuery();\n  const filter = useSelector(selectFilters);\n\n  const filteredContacts = data.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <List>\n      {isLoading && !isError && <ContactsLoader />}\n      {filteredContacts.map(contact => (\n        <ListItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  padding: 20px;\n  max-width: 768px;\n  border-radius: 20px;\n\n  background-color: #1a202c89;\n  backdrop-filter: blur(5px);\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/ContactFilter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from 'components/GlobalStyle/Container.styled';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      {/* {isLoading && !error && <ContactsLoader />} */}\n    </Container>\n  );\n}\n"],"names":["Form","styled","FormikForm","Label","Button","ContactSchema","Yup","shape","name","min","max","required","number","phoneNumberMask","ContactForm","data","useGetContactsQuery","useAddContactsMutation","addContacts","initialValues","validationSchema","onSubmit","values","action","find","toLowerCase","toast","icon","resetForm","type","as","pattern","title","component","field","mask","P","Filter","filter","useSelector","selectFilters","dispatch","useDispatch","value","onChange","target","filteredContact","Item","Thumb","ListItem","id","useDeleteContactMutation","deleteContact","isLoading","disabled","onClick","List","ContactList","isError","filteredContacts","contact","includes","map","Container","Contacts"],"sourceRoot":""}